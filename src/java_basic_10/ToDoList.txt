前提事項

    ・今回の Activity は少々複雑な内容になっているので、まずは全体感を説明します
    　以下の3点をよく読んで、どんなものを作るかがイメージできてから、続きを読み進めてください

        - 今回の Activity では、「銀行口座への預入れ」「銀行口座からの引き出し」の2つの機能を作成します
        　「預入れを実行したら、指定した金額だけ口座残高が増える」
        　「引き出しを実行したら、指定した金額だけ口座残高が減る」……というイメージです

        - どちらの機能も、正常に処理が完了したら
        　「今回どんな取引があって、現在の口座残高がいくらか」が書かれた領収書メッセージを出力します

        - ただし、以下の条件に当てはまる場合には取引を中止し、
        　領収書ではなく、取引に失敗した理由を通知するメッセージを出力します
            1. 0円以下の金額が指定された
            2. 硬貨の取り扱いが必要な金額が指定された　※ 札で表せない(＝1000で割り切れない)金額
            3. 取引の上限金額「20万円」より大きい金額が指定された
            4. 指定された引き出し額に対して残高が不足している　※ 引き出し機能のみ

    ・main メソッド内には、標準入力を受け付ける処理がすでに記述されています
    　かんたんに目を通して内容を把握してから、各ToDo に取り組んでください


//ToDo 1. java_basic_10 パッケージ内に『BankAccountManager』というクラスを作成してください

//ToDo 2. 以下の内容に従い、BankAccountManager クラスを完成させてください
　フィールド:
        ・整数型 balance …… 口座残高、「150000」で初期化

  メソッド:
        ・deposit …… 口座に指定した金額を入金するメソッド
        ・withdraw …… 口座から指定した金額を出金するメソッド
        ・printReceipt …… 今回実行した取引の領収書を作成し、標準出力するメソッド
        ・isInvalidAmount …… 指定された取り扱い金額が不正な値か否かを検証するメソッド
        ※ すべて public で定義

  作成するメソッドの詳細:
        ・deposit メソッド
            - 引数: 整数型 amount …… 入金額
            - 戻り値: なし
            - 処理内容:
                1. 入金額を渡して isInvalidAmount メソッドを呼び出し
                   ・戻り値が true ⇒ 処理を終了する
                   ・戻り値が false ⇒ 2.以降の処理に進む
                2. 口座残高に入金額を加算
                3. 固定の文字列「お預入れ」と入金額を渡して
                   printReceipt メソッドを呼び出し

        ・withdraw メソッド
            - 引数: 整数型 amount …… 出金額
            - 戻り値: なし
            - 処理内容:
                1. 出金額を渡して isInvalidAmount メソッドを呼び出し
                    ・戻り値が true ⇒ 処理を終了する
                    ・戻り値が false ⇒ 2.以降の処理に進む
                2. 出金額と口座残高を比較
                   ・出金額が口座残高より大きい場合 ⇒ 以下の2行を標準出力
                        「ご指定のお引き出し額に対して、残高が不足しています。」
                        「現在の残高: (口座残高)」
                   ・そうでない場合 ⇒ 3. 以降の処理を続ける
                3. 口座残高から出金額を減算
                4. 固定の文字列「お引き出し」と出金額を渡して
                   printReceipt メソッドを呼び出し

        ・printReceipt メソッド
            - 引数: 文字列型 type …… 取引種別
                　　整数型 amount …… 取り扱い金額
            - 戻り値: なし
            - 処理内容:
                1. 前後に改行を入れ、以下の形式の文字列を標準出力

                -----------------------
                ご利用ありがとうございました。

                取引種別:(取引種別)
                お取扱額:(取り扱い金額)
                口座残高:(口座残高)
                -----------------------

        ・isInvalidAmount メソッド
            - 引数: 整数型 amount …… 取り扱い金額
            - 戻り値: 真偽値 …… 検証結果 (不正な値の場合 true)
            - 処理内容:
                1. 取扱金額が0以下のとき
                   ⇒ 「0円以下のお取り扱いはできません。」と標準出力
                       true を返却
                2. 取扱金額を1000で割って余りが出るとき
                   ⇒ 「硬貨のお取り扱いはできません。」と標準出力
                       true を返却
                3. 取扱金額が200000より大きいとき
                   ⇒ 「一度の取引における上限金額は20万円です。」と標準出力
                       true を返却
                4. 上記すべてに当てはまらない場合 false を返却

　【Hint】・printReceipt メソッドと isInvalidAmount メソッドは
           deposit メソッドと withdraw メソッドの処理の中で必要になるので
           これらより先に作るのがおすすめです

         ・printReceipt メソッドで標準出力する文字列はかなり長いので
         　無理に1行にまとめずに、println メソッドを複数回使うのが良いでしょう

         ・入力された金額が不正な値であったとき、預入れ or 引き出し処理を中止する必要があります
           void メソッドの処理を途中で終了するときには
           戻り値を返すときと同じ、あるキーワードを使う……と講義資料の中で学習しましたね
         　
//ToDo 3. Main クラスで BankAccountManager 型のインスタンスを生成し、以下の処理を追加してください
　・変数 inputType の値が「0」＝お預入れ のとき
    ⇒ deposit メソッドに inputAmount を渡して呼び出し
  ・そうでないとき　※ 変数 inputType の値が「1」＝お引き出し のとき
    ⇒ withdraw メソッドに inputAmount を渡して呼び出し
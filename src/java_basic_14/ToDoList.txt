前提事項

    ・今回の Activity では、決済機能や明細出力機能を持つクレジットカードクラス(CreditCard)と、
    　それを利用する Main クラスが事前に用意されています
    　まずは、既存の2つのクラスにどんな処理が書かれているか、軽く目を通しておきましょう
    　(JavaDoc を読むだけでも構いません)

    ・クレジットカードクラスを継承し、一部の処理を書き換えたゴールドカードクラスを
    　作成/利用するのが今回の目標です

    ・既存のクレジットカードクラスと、新規作成するゴールドカードクラスの違いは以下の通りです

        - クレジットカード
            - 利用時に利用額100円ごとに1ポイントが付与される

        - ゴールドカード
            - 通常のクレジットカードの2倍ポイントが付与される(50円ごとに1ポイント)
            - 一度の利用で50000円以上の決済が行われたとき
            　通常付与されるポイントに加え、さらにボーナスとして100ポイントが付与される


//ToDo 1. 『GoldCard』というクラスを作成し、CreditCard クラスを継承させてください

//ToDo 2. GoldCard にクラスに、必要なコンストラクタを追加してください

  【Hint】・1. で継承をした時点で、GoldCard クラスの宣言にエラーが発生して赤下線が引かれているかと思いますが
           エラーが出るのが正しい挙動なので、心配する必要はありません
           これは IntelliJ が「親クラスには引数のあるコンストラクタが宣言されているのに、
           それを継承した子クラスにはないことが問題なので、きちんと作りなさい」と通知してくれているのです

         ・上記の赤下線が引かれている箇所をクリックすると
         　赤い電球マーク(エラー解消方法のヒント)が表示されるので
         　電球マークにカーソルを合わせて「▼」でメニューを開いて
          「Create constructor matching super」を選ぶと、必要なコンストラクタが自動生成されます

//ToDo 3. 以下の指示に従って、GoldCard クラスで親クラスのメソッドをオーバーライドしてください

    対象のメソッド : protected int calcAddPoint(int amount)
    オーバーライドする処理内容 :
                    1. 「今回付与するポイント額」を意味する整数型の変数を宣言
                    2. 引数 amount をそのまま渡して、親クラスの calcAddPoint メソッドを呼び出し
                       その戻り値を2倍した値を ポイント額 (＝1. で用意した変数) に代入
                    3. 引数 amount の値が 50000円以上のときのみ、ポイント額に100を加算
                    4. 戻り値としてポイント額を返す

  【Hint】・親クラスのメソッドを呼び出す際に使うキーワードは講義資料に記載されています

//ToDo 4. Main クラスに書かれている、親クラスのコンストラクタを使ってインスタンスを生成している処理を
          先ほど作成した GoldCard クラスのコンストラクタを使う形に書き換えてください
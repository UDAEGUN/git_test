ToDo 1. 変数 numOfMatch の値分、処理を繰り返す for 文を作成してください
　【Hint】・ToDo2 以降の内容は、ここで作成した for 文の｛ ｝の中に記述しましょう


ToDO 2. 以下の形式で、じゃんけんの開始を通知するメッセージを出力してください
　「（改行）------------（現在が何回目のプレイかを表す数値）回戦開始！------------（改行）」

　【Hint】・「今は何回目のループ中か」は、初期化式の中で宣言した変数（i）を使って参照することができましたね


ToDo 3. 「グー」「チョキ」「パー」のどれを選ぶか、ユーザから標準入力で受け取り、変数 yourHand に代入してください
　入力を促すメッセージ：「あなたが出す手を選んでください　0:グー 1:チョキ 2:パー（改行）>」


ToDo 4. ユーザが「0」「1」「2」以外の値を入力している限り、繰り返し再入力を求めてください
　再入力を促すメッセージ：「出す手は次の選択肢の中から選んでください　0:グー 1:チョキ 2:パー（改行）>」

　【Hint】・「ユーザが入力を何回間違えるか」は事前に予測ができません
            こんなときには for 文以外のある方法を使うと学習しましたね
         ・ループの条件式は、yourHand の値が「0でない」かつ「1でない」かつ「2でない」という形で表すことができます


ToDo 5. 講義資料を参考に、コンピュータがどの手を出すか乱数で選び、変数 comHand に代入してください


ToDo 6. ユーザとコンピュータがそれぞれどの手を選んだか、以下の形式で出力してください
　「あなたの手：（グー or チョキ or パー）」
　「COM の手：（グー or チョキ or パー）」

　【Hint】・「グー」「チョキ」「パー」の選択肢は、配列 hands の中に事前に用意されています


ToDo 7. じゃんけんを実行し、以下の形式で勝負結果を出力してください
　ユーザの勝ち：「あなたの勝ちです！」
　ユーザの負け：「あなたの負けです……」
　あいこ：「あいこです」

　【Hint】・「勝ち」「負け」「あいこ」の3パターンの結果に応じて、表示するメッセージを変更するということは、
            ここでは条件分岐を利用する必要がある……ということになります
         ・じゃんけんの勝敗を表す条件式をどのように書くか、少しイメージしにくいかもしれません
         　例えば、「ユーザがグーを出す」かつ「コンピュータがチョキを出す」……という式が真なら、
         　「グー vs チョキでユーザの勝ち」と判断することができますね


ToDo 8. 以下の形式で、じゃんけんの終了を通知するメッセージを出力してください
　「（改行）------------（現在が何回目のプレイかを表す数値）回戦終了！------------（改行）」